1 - With: int, constant.value
constant const;
Select BOOLEAN with 1234 = const.value
TRUE
5000
2 - With: int, stmt.stmt#
read r;
Select BOOLEAN with 3 = r.stmt#
TRUE
5000
3 - With: int, call.stmt#
call c;
Select BOOLEAN with 8 = c.stmt#
TRUE
5000
4 - With: int, while.stmt#
while w;
Select BOOLEAN with 10 = w.stmt#
TRUE
5000
5 - With: procedure Name: TRUE
procedure p;
Select BOOLEAN with p.procName = "PROC3"
TRUE
5000
6 - With: procedure Name: FALSE
procedure p;
Select BOOLEAN with p.procName = "INVALIDPROC"
FALSE
5000
7 - With: constant value equal if stmt number
constant c; if ifs;
Select c with c.value = ifs.stmt#
11
5000
8 - With: valid stmt number
stmt s;
Select BOOLEAN with s.stmt# = 1
TRUE
5000
9 - With: stmt number not in program
stmt s;
Select BOOLEAN with s.stmt# = 9999
FALSE
5000
10 - With: stmts that are assignment statements
stmt s; assign a;
Select s with s.stmt# = a.stmt#
1, 19, 13, 2, 6, 7, 14, 5, 15, 16, 18, 24
5000
11 - With: comparing variable name with if stmt number (SemanticError)
variable v; if ifs;
Select v with v.varName = ifs.stmt#
SemanticError
5000
12 - With: comparing procedure name with assignment stmt number (SemanticError)
procedure proc; assign a;
Select proc with proc.procName = a.stmt#
SemanticError
5000
13 - With: comparing procedure name with while stmt number (SemanticError)
procedure proc; while w;
Select proc with proc.procName = w.stmt#
SemanticError
5000
14 - With: comparing integer with procedure name (SemanticError)
procedure proc;
Select proc with 1 = proc.procName
SemanticError
5000
15 - With: comparing variable name with print stmt number (SemanticError)
variable var; print p;
Select var with var.varName = p.stmt#
SemanticError
5000
16 - With: compare and get all if statements using with
stmt s; if ifs;
Select s with s.stmt# = ifs.stmt#
11, 12, 17, 4
5000
17 - With: compare and get all call statements using with
stmt s; call c;
Select s with s.stmt# = c.stmt#
22, 20, 21, 23, 8, 9
5000
18 - With: compare and get constants that equal stmt numbers using with
stmt s; constant c;
Select s with s.stmt# = c.value
10, 11, 22
5000
19 - With: tuple and with for same variable name pairs
variable v, v1;
Select <v, v1> with v.varName = v1.varName
VAR0 VAR0,VAR1 VAR1,VAR10 VAR10,VAR11 VAR11,VAR12 VAR12,VAR13 VAR13,VAR2 VAR2,VAR3 VAR3,VAR4 VAR4,VAR5 VAR5,VAR6 VAR6,VAR7 VAR7,VAR8 VAR8,VAR9 VAR9
5000
20 - With: get all procedure names using with
procedure p, p1;
Select p with p.procName = p1.procName
PROC1,PROC2,PROC3,PROC4,PROC5
5000
21 -  Not: Get all constants as not 5 = 10 will be true
constant c;
Select c with not 5 = 10
0, 10, 101, 11, 122, 1234, 22, 909, 99
5000
22  - Not, Call*: p is procedure that does have have call* relationship with PROC6
procedure p;
Select p such that not Calls* (p, "PROC6")
PROC1, PROC2, PROC3, PROC4, PROC5
5000
23  - Not, Call*: p is procedure that does have have call* relationship with PROC5
procedure p;
Select p such that not Calls* (p, "PROC5")
PROC1, PROC2, PROC3, PROC4, PROC5
5000
24  - Not, Call*: p is procedure that does have have call* relationship with PROC2
procedure p;
Select p such that not Calls* (p, "PROC2")
PROC2, PROC3, PROC4, PROC5
5000
25 - Not, While: Get while stmt that does not have y as part of while pattern
while w;
Select w pattern not w("y", _)
10
5000
26 - Not, with: Get all assignment stmts that is not 1
assign a;
Select a with not 10 = a.stmt#
1, 13, 2, 19, 7, 6, 14, 5, 15, 16, 18, 24
5000
27 - Not, Call*: Get all combinations for synonyms p, q
procedure p, q;
Select p such that not Calls* (p, q)
PROC1, PROC2, PROC3, PROC4, PROC5
5000
28 - While, Not: Get all combinations that fit the synonyms w, v in w(v, _)
while w; variable v;
Select <w, v> pattern not w(v, _)
10 VAR10, 10 VAR1, 10 VAR3, 10 VAR12, 10 VAR13, 10 VAR8, 10 VAR0, 10 VAR6, 10 VAR11, 10 VAR4, 10 VAR7, 10 VAR9, 10 VAR5
5000
29 - With, While, Not: Get all constants that are not equal to while stmt
while w; constant c;
Select c with not c.value = w.stmt#
0, 101, 11, 122, 1234, 22, 909, 99
5000
30 - Not, Pattern, While, Wildcard
while w;
Select w pattern not w(_, _)
none
5000
31 - Not, Follows*, wildcard, wildcard
stmt s;
Select s such that not Follows*(_, _)
none
5000
32 - Not, Follows*, stmt, wildcard
stmt s;
Select s such that not Follows*(s, _)
11, 19, 9, 10, 6, 7, 12, 14, 16, 17, 25, 18, 22, 23
5000
33 - Not, Follows*, wildcard, stmt
stmt s;
Select s such that not Follows*(_, s)
10, 1, 11, 19, 7, 5, 12, 13, 15, 17, 18, 20, 23, 24
5000
34 - Not, Follows*, stmt, stmt
stmt s1, s2;
Select s1 such that not Follows*(s1, s2)
10, 1, 8, 19, 2, 6, 3, 7, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 25, 18, 20, 21, 22, 23, 24
5000
35 - Not, Such That, Follows*, wildcard, integer

Select BOOLEAN such that not Follows*(8, _)
FALSE
5000
36 - Not, Such That, Follows*, integer, wildcard

Select BOOLEAN such that not Follows*(_, 2)
FALSE
5000
37 - Not, Such That, Follows*, wildcard, wildcard

Select BOOLEAN such that not Follows*(_, _)
FALSE
5000
38 - Not, Such That, Follows*, integer, integer

Select BOOLEAN such that not Follows*(1, 10)
TRUE
5000
39 - Not, Such That, Parent*, wildcard, integer

Select BOOLEAN such that not Parent*(_, 1)
TRUE
5000
40 - Not, Such That, Parent*, integer, wildcard

Select BOOLEAN such that not Parent*(4, _)
FALSE
5000
41 - Not, Such That, Parent*, integer, integer

Select BOOLEAN such that not Parent*(5, 6)
TRUE
5000
42 - Not, Such That, Parent*, wildcard, wildcard

Select BOOLEAN such that not Parent*(_, _)
FALSE
5000